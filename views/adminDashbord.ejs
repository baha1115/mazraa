<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>لوحة المشرف — Farmers</title>
<meta name="description" content="لوحة تحكم Admin لمراجعة الأراضي والمقاولين والبانرات وإدارة الاشتراكات والسجل.">
<link
  rel="stylesheet"
  href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
  integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
  crossorigin=""
/>
<style>
  :root{
    --g700:#047857; --g600:#059669; --g500:#10b981;
    --y500:#eab308;
    --ink:#0f172a; --ink70:#334155; --ink50:#64748b;
    --bg:#f7faf7; --white:#fff;
    --r:16px; --rs:12px;
    --sh:0 10px 26px rgba(2,44,34,.08);
    --ring:0 0 0 3px rgba(5,150,105,.28);
  }
  *{box-sizing:border-box}
  html,body{height:100%}
  body{
    margin:0;color:var(--ink);
    font:15.5px/1.6 ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial;
    background:
      radial-gradient(900px 360px at 110% -10%, #fef9c3 0%, transparent 60%),
      radial-gradient(900px 360px at -10% 120%, #ecfccb 0%, transparent 60%),
      linear-gradient(#f7fff8,#fbfdf6);
  }
  a{color:inherit;text-decoration:none}
  img{max-width:100%;display:block}
  button{font:inherit;cursor:pointer}
  :focus-visible{outline:none;box-shadow:var(--ring);border-radius:10px}

  /* Topbar */
  .topbar{position:sticky;top:0;z-index:40;background:rgba(255,255,255,.9);border-bottom:1px solid #e5e7eb;backdrop-filter:blur(8px)}
  .topbar__in{display:flex;justify-content:space-between;align-items:center;gap:.8rem;padding:.8rem 0}
  .container{width:min(1200px,92%);margin-inline:auto}
  .brand{display:flex;align-items:center;gap:.6rem;font-weight:900}
  .brand__mark{width:36px;height:36px;display:grid;place-items:center;border-radius:10px;color:#fff;background:linear-gradient(135deg,var(--g600),var(--y500))}
  .topbar__act{display:flex;gap:.5rem}

  /* Buttons / Inputs */
  .btn{display:inline-flex;align-items:center;gap:.4rem;padding:.55rem .85rem;border-radius:12px;border:1px solid transparent;font-weight:800;background:linear-gradient(135deg,var(--g600),var(--g700));color:#fff;box-shadow:0 10px 24px rgba(4,120,87,.18)}
  .btn:hover{filter:brightness(.98)}
  .btn--ghost{background:#fff;border-color:#e5e7eb;color:var(--ink)}
  .btn--warn{background:linear-gradient(135deg,#f59e0b,#d97706)}
  .btn--danger{background:linear-gradient(135deg,#ef4444,#dc2626)}
  .btn--ok{background:linear-gradient(135deg,#10b981,#059669)}
  .btn--sm{padding:.4rem .6rem}
  .input{width:100%;padding:.6rem .8rem;border:1px solid #e2e8f0;border-radius:12px;background:#fff}

  /* Layout */
  .layout{display:grid;grid-template-columns:258px 1fr;gap:1rem;margin:1rem 0}
  .sidebar{border:1px solid #e2e8f0;border-radius:16px;background:#fff;box-shadow:var(--sh);display:flex;flex-direction:column}
  .menu{display:grid;padding:.5rem}
  .menu__item{border:1px solid transparent;border-radius:12px;padding:.65rem .75rem;text-align:right;font-weight:800;color:var(--ink70);background:#fff}
  .menu__item:hover{background:#f9fafb}
  .menu__item.is-active{background:linear-gradient(135deg,var(--g600),var(--g700));color:#fff}
  .sidebar__foot{margin-top:auto;padding:.8rem;border-top:1px solid #e5e7eb;color:var(--ink50);font-size:.92rem}

  .content{min-width:0}
  .panel{display:none;border:1px solid #e2e8f0;border-radius:16px;background:#fff;box-shadow:var(--sh);padding:1rem}
  .panel.is-visible{display:block}
  .head{display:flex;justify-content:space-between;align-items:center;gap:.8rem;margin-bottom:.6rem}
  .muted{color:var(--ink50)}

  /* Cards / Lists */
  .cards{display:grid;grid-template-columns:repeat(2,minmax(0,1fr));gap:.8rem}
  .card{border:1px solid #e5e7eb;border-radius:16px;background:#fff;padding:.8rem}
  .title{margin:.2rem 0 .6rem;font-weight:900}
  .land{display:grid;grid-template-columns:140px 1fr;gap:.8rem;border:1px solid #e5e7eb;border-radius:14px;padding:.6rem;background:#fff}
  .land__media{width:140px;height:105px;border-radius:12px;overflow:hidden;background:#0b1a13}
  .land__media img{width:100%;height:100%;object-fit:cover}
  .meta{color:var(--ink50);font-size:.95rem}
  .pill{display:inline-block;padding:.2rem .5rem;border-radius:999px;font-weight:800;font-size:.85rem;margin-inline-start:.35rem}
  .p--pending{background:#fffbeb;color:#92400e;border:1px solid #fde68a}
  .p--approved{background:#ecfdf5;color:#065f46;border:1px solid #a7f3d0}
  .p--rejected{background:#fef2f2;color:#991b1b;border:1px solid #fecaca}

  .table-wrap{border:1px solid #e2e8f0;border-radius:16px;background:#fff;overflow:hidden}
  table{width:100%;border-collapse:separate;border-spacing:0}
  thead th{position:sticky;top:0;background:#f9fafb;border-bottom:1px solid #e5e7eb;text-align:right;padding:.55rem .7rem}
  tbody td{padding:.55rem .7rem;border-bottom:1px solid #f1f5f9}

  .drawer{position:fixed;top:0;right:-520px;width:min(520px,92%);height:100%;background:#fff;border-left:1px solid #e5e7eb;box-shadow:-12px 0 34px rgba(0,0,0,.08);transition:right .25s ease;z-index:80;display:flex;flex-direction:column}
  .drawer[aria-hidden="false"]{right:0}
  .drawer__head{display:flex;justify-content:space-between;align-items:center;padding:1rem;border-bottom:1px solid #e5e7eb}
  .drawer__body{padding:1rem 1rem 2rem;overflow:auto}
  .backdrop{position:fixed;inset:0;background:rgba(0,0,0,.2);backdrop-filter:blur(2px);z-index:70}

  .toasts{position:fixed;left:16px;bottom:16px;display:grid;gap:.5rem;z-index:90}
  .toast{padding:.55rem .8rem;border-radius:12px;border:1px solid #e2e8f0;background:#fff;box-shadow:var(--sh);font-weight:800}
  .toast--ok{border-color:#a7f3d0;background:#ecfdf5;color:#065f46}
  .toast--warn{border-color:#fde68a;background:#fffbeb;color:#92400e}

  @media (max-width:980px){
    .layout{grid-template-columns:1fr}
    .cards{grid-template-columns:1fr}
  }
  .site-header { background:#fff; border-bottom:1px solid #eee; }
.nav { display:flex; align-items:center; justify-content:space-between; gap:1rem; }
.nav .navlinks { display:flex; align-items:center; gap:1rem; }
.nav .btn { padding:.5rem .9rem; border-radius:10px; }
.badge { font-weight:700; }
.mobile-menu { padding:.75rem 1rem; background:#fff; border-top:1px solid #eee; }
.nav-toggle { background:transparent; border:0; }
#previewMap { height: 260px; border-radius: 12px; border:1px solid #e5e7eb; overflow:hidden; }
</style>
</head>
<body>
<%- include('partials/navbar') %>
<main class="container layout">
  <aside class="sidebar" aria-label="قائمة">
    <nav class="menu">
      <button class="menu__item is-active" data-view="farms">أراضٍ بانتظار الموافقة</button>
      <button class="menu__item" data-view="contractors">ملفات المقاولين</button>
      <button class="menu__item" data-view="banners" style="display: none;">طلبات بانرات</button>
      <button class="menu__item" data-view="subs">الاشتراكات والصلاحيات</button>
      <button class="menu__item" data-view="history" style="display: none;">سجلّ التعديلات</button>
      <button class="menu__item" data-view="settings">إضافة بانرات</button>
    </nav>
    <div class="sidebar__foot">© <span data-year></span> Farmers</div>
  </aside>

  <section class="content">

    <!-- 1) Farms Pending -->
    <section id="view-farms" class="panel is-visible">
      <div class="head">
        <h2>أراضٍ بانتظار الموافقة</h2>
        <div style="display:flex;gap:.5rem;align-items:center">
          <label class="muted">تصفية المنطقة:</label>
          <select id="areaFilter" class="input" style="width:220px">
            <option value="all">الكل</option>
          </select>
        </div>
      </div>
      <div id="farmsWrap" class="cards"></div>
      <p id="farmsEmpty" class="muted" hidden>لا توجد طلبات بانتظار المراجعة.</p>
    </section>

    <!-- 2) Contractors -->
<!-- Contractors as CARDS -->
<section id="view-contractors" class="panel">
  <div class="head"><h2>ملفات المقاولين بانتظار المراجعة</h2></div>
  <div style="display:flex;gap:.5rem;align-items:center;margin:.4rem 0 .8rem">
    <label class="muted">الحالة:</label>
    <select id="contractorStatus" class="input" style="width:220px">
      <option value="pending" selected>قيد المراجعة</option>
      <option value="approved">مقبول</option>
      <option value="rejected">مرفوض</option>
    </select>
  </div>

  <div id="contractorsCards" class="cards"></div>
  <p id="contractorsEmpty" class="muted" hidden>لا توجد ملفات الآن.</p>
</section>

    <!-- 3) Banners -->
    <section id="view-banners" class="panel" style="display: none;">
      <div class="head"><h2>طلبات البانرات الإعلانية</h2></div>
      <div class="table-wrap">
        <table>
          <thead><tr><th>المالك/المقاول</th><th>الموضع</th><th>المدة</th><th>رابط الصورة</th><th style="width:220px">إجراء</th></tr></thead>
          <tbody id="bannersBody"></tbody>
        </table>
      </div>
      <p class="muted" id="bannersEmpty" hidden>لا توجد طلبات حاليًا.</p>
    </section>

    <!-- 4) Subs & Permissions -->
    <section id="view-subs" class="panel">
      <div class="head"><h2>الاشتراكات والصلاحيات</h2></div>
      <div class="table-wrap">
        <table>
          <thead><tr><th>الاسم</th><th>الإيميل</th><th>النوع</th><th>الصلاحيات</th><th style="width:180px">تحرير</th></tr></thead>
          <tbody id="subsBody"></tbody>
        </table>
      </div>
    </section>

    <!-- 5) History -->
    <section id="view-history" class="panel" style="display: none;">
      <div class="head"><h2>سجلّ التعديلات والموافقات</h2></div>
      <div id="historyList" class="card"></div>
      <button id="clearHistory" class="btn btn--ghost btn--sm" style="margin-top:.6rem">تفريغ السجل</button>
    </section>
<% var _promo = (typeof promo !== 'undefined' && promo) ? promo : {}; %>

    <!-- 6) Admin settings -->
    <!-- 6) Admin settings -->
<section id="view-settings" class="panel">
  <div class="head"><h2>إضافة بانرات</h2></div>

  <form method="post" action="/admin/promo/contractors"
        class="card" style="display:grid;gap:.6rem;max-width:560px">
    <label class="muted" style="display:flex;align-items:center;gap:.5rem">
      <input type="checkbox" name="enabled" <%= _promo.enabled ? 'checked' : '' %> />
      تفعيل
    </label>

    <div>
      <label class="muted">صورة</label>
      <input class="input" name="img" value="<%= _promo.img || '' %>" />
    </div>

    <div>
      <label class="muted">العنوان</label>
      <input class="input" name="title" value="<%= _promo.title || '' %>" />
    </div>

    <div>
      <label class="muted">النص</label>
      <textarea class="input" name="text" rows="4"><%= _promo.text || '' %></textarea>
    </div>

    <div>
      <label class="muted">الرابط</label>
      <input class="input" name="link" value="<%= _promo.link || '' %>" />
    </div>

    <div style="display:flex;gap:.5rem">
      <button class="btn btn--ok" type="submit">حفظ</button>
      <button class="btn btn--ghost" type="reset">إلغاء</button>
    </div>
  </form>
</section>

</main>

<!-- Drawer -->
<aside id="drawer" class="drawer" aria-hidden="true" role="dialog" aria-labelledby="drawerTitle">
  <div class="drawer__head"><h3 id="drawerTitle">معاينة</h3><button class="btn btn--ghost btn--sm" data-close>✕</button></div>
  <div id="drawerBody" class="drawer__body"></div>
</aside>
<div id="backdrop" class="backdrop" hidden></div>

<!-- Toasts -->
<div id="toasts" class="toasts" aria-live="polite" aria-atomic="true"></div>
<script
  src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
  integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
  crossorigin=""
></script>
<script>
(() => {
  'use strict';

  /* ---------- Helpers ---------- */
  const qs  = (s, r=document)=>r.querySelector(s);
  const qsa = (s, r=document)=>Array.from(r.querySelectorAll(s));
  function esc(s){return (s??'').toString().replace(/[&<>"']/g,m=>({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m]))}
  
  const toastBox = qs('#toasts');
  const fmt = new Intl.NumberFormat('en');
  function toast(msg, kind='ok', ms=2200){
    const t = document.createElement('div');
    t.className = 'toast ' + (kind==='ok' ? 'toast--ok' : 'toast--warn');
    t.textContent = msg;
    toastBox.appendChild(t);
    setTimeout(()=>t.remove(), ms);
  }
  qsa('[data-year]').forEach(el => el.textContent = String(new Date().getFullYear()));

  /* ---------- LocalStorage (للسجل والإعدادات فقط) ---------- */
  const ADMIN_KEY = 'farmers_admin_actions';
  function load(k){ try{const raw=localStorage.getItem(k); return raw?JSON.parse(raw):null;}catch{return null} }
  function save(k,v){ localStorage.setItem(k, JSON.stringify(v)); }
  const adminState = load(ADMIN_KEY) || [];

  /* ---------- Navigation ---------- */
  const views = {
    farms:        qs('#view-farms'),
    contractors:  qs('#view-contractors'),
    banners:      qs('#view-banners'),
    subs:         qs('#view-subs'),
    history:      qs('#view-history'),
    settings:     qs('#view-settings'),
  };
  qsa('.menu__item').forEach(btn=>{
    btn.addEventListener('click', ()=>{
      qsa('.menu__item').forEach(b=>b.classList.remove('is-active'));
      btn.classList.add('is-active');
      const t = btn.dataset.view;
      Object.entries(views).forEach(([k,sec])=>sec.classList.toggle('is-visible', k===t));
    });
  });

  /* =========================
     1) FARMS (Pending)
     ========================= */
  const farmsWrap  = qs('#farmsWrap');
  const farmsEmpty = qs('#farmsEmpty');
  const areaFilter = qs('#areaFilter');

  async function uniqueAreas(){
    try{
      const res = await fetch('/admin/farms?status=pending', { headers:{'Accept':'application/json'} });
      const json = await res.json();
      const lands = json.ok ? (json.data||[]) : [];
      const a = Array.from(new Set(lands.map(l=>l.area).filter(Boolean)));
      areaFilter.innerHTML = '<option value="all">الكل</option>' + a.map(x=>`<option>${esc(x)}</option>`).join('');
    }catch{
      areaFilter.innerHTML = '<option value="all">الكل</option>';
    }
  }
  async function apiGetPendingFarms(area){
    const params = new URLSearchParams({ status: 'pending' });
    const res = await fetch('/admin/farms?' + params.toString(), { headers:{'Accept':'application/json'} });
    const json = await res.json();
    if (!json.ok) throw new Error('Failed to load');
    let items = json.data || [];
    if (area && area !== 'all') items = items.filter(l => l.area === area);
    return items;
  }
  async function apiApproveFarm(id){
    const res = await fetch('/admin/farms/'+id+'/approve', { method:'PATCH' });
    return res.json();
  }
  async function apiRejectFarm(id, note){
    const res = await fetch('/admin/farms/'+id+'/reject', {
      method:'PATCH',
      headers:{'Content-Type':'application/json'},
      body: JSON.stringify({ note: note||'' })
    });
    return res.json();
  }
  async function apiGetFarmById(id){
    const res = await fetch(`/admin/farms/${id}`, { headers:{'Accept':'application/json'} });
    const json = await res.json();
    if (!json.ok) throw new Error(json.msg || 'failed');
    return json.data;
  }

  function farmDetailsHTML(f){
    const kindText  = f.kind === 'rent' ? 'إيجار' : 'بيع';
    const priceText = f.kind === 'rent' ? ('$'+fmt.format(f.price)+'/شهر') : ('$'+fmt.format(f.price));
    const locLine   = f.location ? `${(f.location.address||'')} ${(f.location.lat!=null&&f.location.lng!=null)?`(${f.location.lat}, ${f.location.lng})`:''}` : '—';

    const imgs = Array.isArray(f.photos) && f.photos.length
      ? f.photos.slice(0, 8).map(src => `
          <div style="border:1px solid #e5e7eb;border-radius:10px;overflow:hidden">
            <img src="${src}" alt="" style="width:100%;height:120px;object-fit:cover">
          </div>`).join('')
      : '<div class="muted">لا توجد صور مرفوعة.</div>';

    const rejectNote = (f.status === 'rejected' && f.reviewNote)
      ? `<p class="muted" style="margin:.4rem 0 0"><strong>سبب الرفض:</strong> ${esc(f.reviewNote)}</p>`
      : '';
const video = f.videoUrl ? videoBlock(f.videoUrl) : '';
    return `
      <div style="display:grid;gap:.55rem">
        <h3 style="margin:.2rem 0">${esc(f.title || '—')}</h3>
        <div class="muted">
          ${kindText} • ${esc(f.area || '—')} — ${esc(f.city || '—')} • ${fmt.format(f.size||0)} م² • ${priceText}
        </div>

        <div style="display:grid;grid-template-columns:repeat(4,1fr);gap:.4rem;margin:.35rem 0">
          ${imgs}
        </div>

        <div>
          <p style="white-space:pre-wrap">${esc(f.description || f.desc || '—')}</p>
        </div>
 ${video}
        <div>
          <p class="muted" style="margin:.1rem 0"><strong>الموقع:</strong> ${esc(locLine)}</p>
          <div id="previewMap" style="height:280px;border-radius:12px;overflow:hidden;border:1px solid #e5e7eb"></div>
        </div>

        <div style="margin-top:.3rem">
          <span class="pill ${
            f.status==='approved' ? 'p--approved' :
            f.status==='rejected' ? 'p--rejected' : 'p--pending'
          }">
            ${
              f.status==='approved' ? 'مقبول' :
              f.status==='rejected' ? 'مرفوض' : 'بانتظار المراجعة'
            }
          </span>
          ${rejectNote}
        </div>
      </div>
    `;
  }

  function initPreviewMap(f){
    const box = document.getElementById('previewMap');
    if (!box) return;
    const lat = Number(f?.location?.lat);
    const lng = Number(f?.location?.lng);
    if (!isFinite(lat) || !isFinite(lng)) {
      box.innerHTML = '<div class="muted" style="padding:.5rem">لا توجد إحداثيات لعرض الخريطة.</div>';
      return;
    }
    const map = L.map('previewMap', { scrollWheelZoom:false }).setView([lat, lng], 13);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      maxZoom: 19, attribution: '&copy; OpenStreetMap'
    }).addTo(map);
    L.marker([lat, lng]).addTo(map);
  }

  async function renderFarms(){
    farmsWrap.innerHTML = '';
    let items = [];
    try{
      items = await apiGetPendingFarms(areaFilter.value);
    }catch{}
    items.forEach(l=>{
      const cover = (l.photos && l.photos[0]) || 'assets/rent/featured-03.jpg';
      const loc = l.location ? ` • 📍 ${esc(l.location.address || (l.location.lat+', '+l.location.lng))}` : '';
      const el = document.createElement('article');
      el.className='land';
      el.innerHTML = `
        <div class="land__media"><img src="${cover}" alt=""></div>
        <div>
          <h3 class="title" style="margin:.1rem 0">${esc(l.title)}</h3>
          <div class="meta">
            ${l.kind==='sale'?'بيع':'إيجار'} • ${esc(l.area)} — ${esc(l.city||'')}${loc}
            • ${l.kind==='rent'?'$'+fmt.format(l.price)+'/شهر':'$'+fmt.format(l.price)} • ${fmt.format(l.size)} م²
            <span class="pill p--pending">بانتظار المراجعة</span>
          </div>

          <div style="display:flex;gap:.4rem;flex-wrap:wrap;margin-top:.45rem">
            <button class="btn btn--ghost btn--sm" data-act="preview" data-id="${l._id}">معاينة</button>

            <form action="/admin/farms/${l._id}/approve?_method=PATCH" method="post" style="display:inline">
              <button class="btn btn--ok btn--sm" type="submit">موافقة</button>
            </form>

            <form action="/admin/farms/${l._id}/reject?_method=PATCH" method="post" style="display:inline-flex;gap:.35rem;align-items:center">
              <input type="text" name="note" placeholder="سبب الرفض (اختياري)" class="input" style="width:200px;padding:.3rem .5rem"/>
              <button class="btn btn--danger btn--sm" type="submit">رفض</button>
            </form>
          </div>
        </div>`;
      farmsWrap.appendChild(el);
    });
    farmsEmpty.hidden = items.length>0;
  }

  areaFilter.addEventListener('change', renderFarms);

  farmsWrap.addEventListener('click', async (e)=>{
    const btn = e.target.closest('button[data-act]'); if(!btn) return;
    const id = btn.dataset.id, act = btn.dataset.act;

    if (act==='preview'){
      try {
        const farm = await apiGetFarmById(id);
        const html = farmDetailsHTML(farm);
        openDrawer(html, 'تفاصيل الأرض');
        setTimeout(()=> initPreviewMap(farm), 0);
      } catch(err) {
        console.error(err);
        toast('تعذر تحميل التفاصيل','warn');
      }
      return;
    }
  });

  /* =========================
     2) CONTRACTORS (API)
     ========================= */
  async function apiGetContractors(status){
    const params = new URLSearchParams({ status: status || 'pending' });
    const res = await fetch('/admin/contractors?' + params.toString(), { headers:{'Accept':'application/json'} });
    const json = await res.json();
    if (!json.ok) throw new Error(json.msg || 'failed');
    return json.data || [];
  }
  async function apiApproveContractor(id){
    const res = await fetch('/admin/contractors/'+id+'/approve', { method:'PATCH' });
    return res.json();
  }
  async function apiRejectContractor(id, note){
    const res = await fetch('/admin/contractors/'+id+'/reject', {
      method:'PATCH',
      headers:{'Content-Type':'application/json'},
      body: JSON.stringify({note: note||''})
    });
    return res.json();
  }
  function parseYoutubeId(url){
  if (!url) return null;
  try {
    const u = new URL(url);
    // صيغ مدعومة: https://youtu.be/ID  |  https://www.youtube.com/watch?v=ID  |  /embed/ID
    if (u.hostname.includes('youtu.be')) return u.pathname.slice(1);
    if (u.hostname.includes('youtube.com')) {
      if (u.searchParams.get('v')) return u.searchParams.get('v');
      const m = u.pathname.match(/\/embed\/([^/]+)/);
      if (m) return m[1];
    }
    return null;
  } catch { return null; }
}

function videoBlock(url){
  if (!url) return '';
  const id = parseYoutubeId(url);
  if (id){
    return `
      <div style="margin-top:.5rem">
        <div style="position:relative;padding-bottom:56.25%;height:0;border-radius:10px;overflow:hidden;border:1px solid #e5e7eb">
          <iframe src="https://www.youtube.com/embed/${id}"
                  title="Video" frameborder="0" allow="accelerometer;autoplay;clipboard-write;encrypted-media;gyroscope;picture-in-picture;web-share"
                  allowfullscreen
                  style="position:absolute;inset:0;width:100%;height:100%"></iframe>
        </div>
      </div>`;
  }
  // لو كان رابط ملف فيديو مباشر mp4/webm/ogg:
  if (/\.(mp4|webm|ogg)$/i.test(url)) {
    return `
      <div style="margin-top:.5rem">
        <video controls style="width:100%;border-radius:10px;border:1px solid #e5e7eb" src="${url}"></video>
      </div>`;
  }
  // غير ذلك: اعرضه كزر فتح
  return `
    <div style="margin-top:.5rem">
      <a class="btn btn--ghost btn--sm" href="${url}" target="_blank" rel="noopener">فتح الفيديو</a>
    </div>`;
}

// API: احضر مقاول واحد بالتفاصيل
  async function apiGetContractorById(id){
    const res  = await fetch('/admin/contractors/'+id, { headers:{'Accept':'application/json'} });
    const json = await res.json();
    if(!json.ok) throw new Error(json.msg||'failed');
    return json.data;
  }
  function renderVideoBlock(url){
    if(!url) return '<div class="muted">لا يوجد فيديو.</div>';
    const u = url.trim();
    // YouTube
    const yt = u.match(/(?:youtu\.be\/|youtube\.com\/watch\?v=)([A-Za-z0-9_-]{11})/);
    if (yt) {
      return `
        <div class="video-wrap">
          <iframe width="100%" height="315"
            src="https://www.youtube.com/embed/${yt[1]}"
            title="YouTube video" frameborder="0"
            allowfullscreen></iframe>
        </div>`;
    }
    // Vimeo (مبسط)
    const vm = u.match(/vimeo\.com\/(\d+)/);
    if (vm) {
      return `
        <div class="video-wrap">
          <iframe width="100%" height="315"
            src="https://player.vimeo.com/video/${vm[1]}"
            title="Vimeo video" frameborder="0"
            allowfullscreen></iframe>
        </div>`;
    }
    // ملف فيديو مباشر
    if (/\.(mp4|webm|ogg)(\?|$)/i.test(u)) {
      return `<video controls style="width:100%;max-height:360px"><source src="${u}"></video>`;
    }
    // غير ذلك: رابط فقط
    return `<a href="${u}" target="_blank" rel="noopener">فتح الفيديو</a>`;
  }

 
// يبني معاينة كاملة (صور، نبذة، خدمات، بيانات تواصل، معرض أعمال)
function contractorDetailsHTML(c){
    const esc = s => (s??'').toString().replace(/[&<>"']/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m]));
    const services = Array.isArray(c.services) ? c.services.join('، ') : (c.services||'');
    const gallery  = Array.isArray(c.photos) && c.photos.length
      ? c.photos.map(src => `
          <div style="border:1px solid #e5e7eb;border-radius:12px;overflow:hidden">
            <img src="${src}" alt="" style="width:100%;height:140px;object-fit:cover">
          </div>`).join('')
      : '<div class="muted">لا توجد صور أعمال.</div>';

    const avatar = c.avatar || '/assets/contractor-1.jpg';
    const badge =
      c.status==='approved' ? '<span class="pill p--approved">مقبول</span>' :
      c.status==='rejected' ? '<span class="pill p--rejected">مرفوض</span>'  :
                              '<span class="pill p--pending">قيد المراجعة</span>';

    const rejectNote = (c.status==='rejected' && c.reviewNote)
      ? `<div class="muted" style="margin-top:.35rem"><strong>سبب الرفض:</strong> ${esc(c.reviewNote)}</div>`
      : '';

    // ← إضافة بلوك الفيديو إن وُجد
     const videoBlock = renderVideoBlock(c.videoUrl);

    return `
      <div style="display:grid;gap:.8rem">
        <div style="display:grid;grid-template-columns:96px 1fr;gap:.8rem;align-items:center">
          <div style="width:96px;height:96px;border-radius:12px;overflow:hidden;border:1px solid #e5e7eb;background:#0b1a13">
            <img src="${avatar}" alt="" style="width:100%;height:100%;object-fit:cover">
          </div>
          <div>
            <h3 class="title" style="margin:.1rem 0">${esc(c.name || c.companyName || '—')} ${badge}</h3>
            <div class="muted">
              ${esc(c.companyName || '—')} • ${esc(c.city||'—')} — ${esc(c.region||'—')}
              <br>الخدمات: ${esc(services || '—')}
              <br>الهاتف: ${esc(c.phone || '—')} • البريد: ${esc(c.email || '—')}
            </div>
          </div>
        </div>

        <div>
          <h4 style="margin:.2rem 0">نبذة</h4>
          <p style="white-space:pre-wrap">${esc(c.bio || c.description || '—')}</p>
        </div>

        ${videoBlock}

        <div>
          <h4 style="margin:.2rem 0">معرض الأعمال</h4>
          <div style="display:grid;grid-template-columns:repeat(4,1fr);gap:.5rem">${gallery}</div>
        </div>

        ${rejectNote}
      </div>
    `;
  }
  const contractorStatus  = qs('#contractorStatus');
  const contractorsCards  = qs('#contractorsCards');
  const contractorsEmpty  = qs('#contractorsEmpty');
  function pill(status){
    if (status==='approved') return '<span class="pill p--approved">مقبول</span>';
    if (status==='rejected') return '<span class="pill p--rejected">مرفوض</span>';
    return '<span class="pill p--pending">قيد المراجعة</span>';
  }

  async function renderContractorCards(){
    contractorsCards.innerHTML = '';
    let rows = [];
    try { rows = await apiGetContractors(contractorStatus.value); } catch { rows = []; }

    contractorsEmpty.hidden = rows.length>0;

    rows.forEach(c=>{
      const avatar = c.avatar || '/assets/contractor-1.jpg';
      const services = Array.isArray(c.services) ? c.services.join('، ') : (c.services||'');
      const card = document.createElement('article');
      card.className = 'card';
      card.innerHTML = `
        <div style="display:grid;grid-template-columns:96px 1fr;gap:.8rem;align-items:flex-start">
          <div style="width:96px;height:96px;border-radius:12px;overflow:hidden;border:1px solid #e5e7eb;background:#0b1a13">
            <img src="${avatar}" alt="" style="width:100%;height:100%;object-fit:cover">
          </div>
          <div>
            <h3 class="title" style="margin:.15rem 0">${esc(c.name || c.companyName || '—')}</h3>
            <div class="meta">
              ${esc(c.companyName || '—')} • ${esc(c.city||'—')} — ${esc(c.region||'—')}
              <br>الخدمات: ${esc(services || '—')}
              <br>الهاتف: ${esc(c.phone || '—')} • البريد: ${esc(c.email || '—')}
            </div>
            <div style="margin-top:.35rem">${pill(c.status)}</div>

            <div style="display:flex;gap:.4rem;flex-wrap:wrap;margin-top:.6rem">
              <button class="btn btn--ghost btn--sm" data-act="view" data-id="${c._id}">معاينة</button>

              <form action="/admin/contractors/${c._id}/approve?_method=PATCH" method="post" style="display:inline">
                <button class="btn btn--ok btn--sm" type="submit">موافقة</button>
              </form>

              <form action="/admin/contractors/${c._id}/reject?_method=PATCH" method="post" style="display:inline-flex;gap:.35rem;align-items:center">
                <input type="text" name="note" placeholder="سبب الرفض (اختياري)" class="input" style="width:200px;padding:.3rem .5rem"/>
                <button class="btn btn--danger btn--sm" type="submit">رفض</button>
              </form>
            </div>
          </div>
        </div>
      `;
      contractorsCards.appendChild(card);
    });
  }
document.addEventListener('click', async (e)=>{
    const btn = e.target.closest('button[data-act="view-contractor"][data-id]');
    if(!btn) return;
    try{
      const doc = await apiGetContractorById(btn.dataset.id);
      const html = contractorDetailsHTML(doc);
      openDrawer(html, 'ملف مقاول');
    }catch(err){
      console.error(err);
      toast('تعذر تحميل التفاصيل','warn');
    }
  });
document.addEventListener('click', async (e)=>{
  const btn = e.target.closest('button[data-act="view"][data-id]');
  if (!btn) return;
  const id = btn.dataset.id;

  try {
    const contractor = await apiGetContractorById(id);
    const html = contractorDetailsHTML(contractor);
    openDrawer(html, 'ملف مقاول');
  } catch (err) {
    console.error(err);
    toast('تعذر تحميل تفاصيل المقاول','warn');
  }
});

  contractorStatus?.addEventListener('change', renderContractorCards);

  /* =========================
     3) Banners (Demo)
     ========================= */
  const bannersBody = qs('#bannersBody'), bannersEmpty = qs('#bannersEmpty');
  let banners = [
    {id:'B-01', owner:'مالك L-1001', place:'الصفحة الرئيسية (Hero)', days:7,  img:'assets/banners/b1.jpg', status:'pending'},
    {id:'B-02', owner:'VIP مقاول',    place:'صفحة المقاولين',        days:14, img:'assets/banners/b2.jpg', status:'pending'}
  ];
  function renderBanners(){
    const pending = banners.filter(b=>b.status==='pending');
    bannersEmpty.hidden = pending.length>0;
    bannersBody.innerHTML='';
    pending.forEach(b=>{
      const tr=document.createElement('tr');
      tr.innerHTML=`
        <td>${esc(b.owner)}</td>
        <td>${esc(b.place)}</td>
        <td>${b.days} يوم</td>
        <td><a href="${b.img}" target="_blank" rel="noopener">فتح</a></td>
        <td>
          <button class="btn btn--ok btn--sm" data-bid="${b.id}" data-act="activate">تفعيل</button>
          <button class="btn btn--danger btn--sm" data-bid="${b.id}" data-act="reject">رفض</button>
        </td>`;
      bannersBody.appendChild(tr);
    });
  }
  bannersBody?.addEventListener('click',(e)=>{
    const btn=e.target.closest('button[data-bid]'); if(!btn) return;
    const b = banners.find(x=>x.id===btn.dataset.bid); if(!b) return;
    if (btn.dataset.act==='activate'){
      b.status='active'; logAction('activate_banner', `تفعيل بانر (${b.place}) لـ ${b.owner}`, {id:b.id});
      renderBanners(); toast('تم التفعيل','ok');
    } else {
      b.status='rejected'; logAction('reject_banner', `رفض بانر (${b.place}) لـ ${b.owner}`, {id:b.id});
      renderBanners(); toast('تم الرفض','warn');
    }
  });

  /* =========================
     4) Subscriptions (Demo)
     ========================= */
  const subsBody = qs('#subsBody');
  let users = [
    {id:'U-OWN', name:'مالك',      email:'owner@example.com',      plan: 'Basic',  perms:['بيع','إيجار','بانر']},
    {id:'U-CON', name:'مقاول (API)', email:'contractor@example.com', plan: 'Basic', perms:['مقاول','بانر']},
  ];
  async function apiGetSubs(status){
  const params = new URLSearchParams({ status: status || 'pending' });
  const res = await fetch('/admin/subscriptions?' + params.toString(), { headers:{'Accept':'application/json'} });
  const json = await res.json();
  if (!json.ok) throw new Error(json.msg || 'failed');
  return json.data || [];
}
async function apiApproveSub(id){
  const res = await fetch('/admin/subscriptions/'+id+'/approve', { method:'PATCH' });
  return res.json();
}
async function apiRejectSub(id, note){
  const res = await fetch('/admin/subscriptions/'+id+'/reject', {
    method:'PATCH',
    headers:{'Content-Type':'application/json'},
    body: JSON.stringify({ note: note || '' })
  });
  return res.json();
}

  async function renderSubs(){
  subsBody.innerHTML = '';
  let rows = [];
  try { rows = await apiGetSubs('pending'); } catch { rows = []; }

  if (!rows.length){
    subsBody.innerHTML = `<tr><td colspan="5" class="muted">لا توجد طلبات اشتراك معلّقة.</td></tr>`;
    return;
  }

  rows.forEach(r=>{
    const tr = document.createElement('tr');
    const uname  = r.user?.name || r.name || '—';
    const email  = r.user?.email || '—';
    const plan   = r.plan || 'Premium';
    tr.innerHTML = `
      <td>${esc(uname)}</td>
      <td>${esc(email)}</td>
      <td><span class="pill ${plan==='VIP'?'p--approved':'p--pending'}">${esc(plan)}</span></td>
      <td>${esc(r.notes || '')}</td>
      <td style="display:flex;gap:.4rem;align-items:center">
        <button class="btn btn--ok btn--sm" data-sub="${r._id}" data-act="sub-approve">موافقة</button>
        <form class="inline-reject" data-sub="${r._id}" style="display:inline-flex;gap:.35rem;align-items:center">
          <input type="text" name="note" placeholder="سبب الرفض (اختياري)" class="input" style="width:180px;padding:.3rem .5rem"/>
          <button class="btn btn--danger btn--sm" type="submit">رفض</button>
        </form>
      </td>`;
    subsBody.appendChild(tr);
  });
}
subsBody?.addEventListener('click', async (e)=>{
  const btn = e.target.closest('button[data-act="sub-approve"][data-sub]');
  if (!btn) return;
  const id = btn.dataset.sub;
  try {
    const res = await apiApproveSub(id);
    if (!res.ok) throw new Error(res.msg||'failed');
    toast('تمت الموافقة على الاشتراك','ok');
    renderSubs();
  } catch(err) {
    console.error(err); toast('تعذّر الموافقة','warn');
  }
});

subsBody?.addEventListener('submit', async (e)=>{
  const form = e.target.closest('form.inline-reject[data-sub]');
  if (!form) return;
  e.preventDefault();
  const id = form.dataset.sub;
  const fd = new FormData(form);
  const note = (fd.get('note')||'').toString();
  try {
    const res = await apiRejectSub(id, note);
    if (!res.ok) throw new Error(res.msg||'failed');
    toast('تم الرفض','warn');
    renderSubs();
  } catch(err) {
    console.error(err); toast('تعذّر الرفض','warn');
  }
});

  /* =========================
     5) History
     ========================= */
  const historyList = qs('#historyList');
  function logAction(type, text, payload={}){
    const item = {id: 'A-'+Date.now(), ts: new Date().toISOString(), type, text, payload};
    adminState.push(item);
    save(ADMIN_KEY, adminState);
    renderHistory();
  }
  function renderHistory(){
    if (!adminState.length){ historyList.innerHTML='<p class="muted">لا يوجد سجل بعد.</p>'; return; }
    historyList.innerHTML = adminState.slice().reverse().map(a=>{
      const d = new Date(a.ts).toLocaleString('ar-EG');
      return `<div style="display:grid;grid-template-columns:140px 1fr;gap:.6rem;padding:.45rem .2rem;border-bottom:1px dashed #e5e7eb">
        <div class="muted">${d}</div>
        <div><strong>${esc(a.text)}</strong><div class="muted" style="font-size:.92rem">#${esc(a.type)}</div></div>
      </div>`;
    }).join('');
  }
  qs('#clearHistory')?.addEventListener('click', ()=>{ if(!confirm('تفريغ السجل؟')) return; save(ADMIN_KEY, []); adminState.length=0; renderHistory(); });

  /* ---------- Drawer ---------- */
  const drawer   = qs('#drawer');
  const backdrop = qs('#backdrop');
  qs('[data-close]')?.addEventListener('click', closeDrawer);
  backdrop?.addEventListener('click', closeDrawer);
  function openDrawer(html, title='معاينة'){
    qs('#drawerTitle').textContent = title;
    qs('#drawerBody').innerHTML = html;
    drawer.setAttribute('aria-hidden','false'); backdrop.hidden=false;
  }
  function closeDrawer(){ drawer.setAttribute('aria-hidden','true'); backdrop.hidden=true; }

  /* ---------- Admin Settings ---------- */
  const adminSettings = qs('#adminSettings');
  const ADMIN_PREFS_KEY='farmers_admin_prefs';
  const prefs = load(ADMIN_PREFS_KEY) || {name:'Admin',noti:'all'};
  function fillPrefs(){ if(!adminSettings) return; adminSettings.name.value=prefs.name; adminSettings.noti.value=prefs.noti; }
  adminSettings?.addEventListener('submit',(e)=>{
    e.preventDefault();
    const fd = new FormData(adminSettings);
    prefs.name = (fd.get('name')||'Admin').toString();
    prefs.noti = fd.get('noti')||'all';
    save(ADMIN_PREFS_KEY, prefs); toast('تم حفظ الإعدادات','ok');
  });

  /* ---------- Init ---------- */
  function init(){
    uniqueAreas();
    renderFarms();

    // المقاولون (بالـAPI)
    renderContractorCards();

    // الديمو
    renderBanners();
    renderSubs();
    renderHistory();
    fillPrefs();
  }
  init();

  /* ---------- Misc ---------- */
  qs('#refreshBtn')?.addEventListener('click', ()=>{ location.reload(); });
  qs('#logoutBtn')?.addEventListener('click', ()=> toast('تم تسجيل الخروج (تجريبي)','warn'));
})();
</script>



</body>
</html>
