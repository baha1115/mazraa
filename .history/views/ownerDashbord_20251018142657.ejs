<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>لوحة المالك — أراضي + خريطة + رفع صور + طلب اشتراك</title>
  <meta name="description" content="لوحة مالك الأرض لإضافة الإعلانات وتحديد الموقع على خريطة OpenStreetMap مع رفع الصور وطلب ترقية الاشتراك عبر واتساب.">

  <!-- Leaflet CSS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" crossorigin="anonymous"/>

  <style>
    :root{
      --g700:#047857; --g600:#059669; --y500:#eab308;
      --ink:#0f172a; --ink70:#334155; --ink50:#64748b;
      --bg:#f7faf7; --ring:0 0 0 3px rgba(5,150,105,.28);
      --sh1:0 10px 26px rgba(2,44,34,.10);
      --radius:16px;
    }
    *{box-sizing:border-box}
    html,body{height:100%}
    body{margin:0;background:linear-gradient(#f7fff8,#fbfdf6);color:var(--ink);font:16px/1.55 ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Arial}
    .container{width:min(1180px,92%);margin-inline:auto}
    .topbar{position:sticky;top:0;background:rgba(255,255,255,.9);backdrop-filter:blur(8px);border-bottom:1px solid #e5e7eb;z-index:10}
    .topbar__inner{display:flex;justify-content:space-between;align-items:center;padding:.8rem 0}
    .brand{display:flex;gap:.6rem;align-items:center;font-weight:900}
    .brand__mark{width:36px;height:36px;border-radius:10px;display:grid;place-items:center;color:#fff;background:linear-gradient(135deg,var(--g600),var(--y500))}
    .btn{display:inline-flex;align-items:center;gap:.4rem;padding:.6rem .9rem;border-radius:12px;border:1px solid #d1d5db;background:#fff;font-weight:800;cursor:pointer}
    .btn--primary{background:linear-gradient(135deg,var(--g600),var(--g700));color:#fff;border-color:transparent;box-shadow:0 10px 24px rgba(4,120,87,.2)}
    .btn--small{padding:.45rem .65rem}
    .btn--ghost{background:#fff}
    .btn--danger{background:linear-gradient(135deg,#ef4444,#dc2626);color:#fff;border-color:transparent}
    .btn--outline{background:#fff;border-color:#d1d5db}
    .input{width:100%;padding:.6rem .8rem;border:1px solid #e2e8f0;border-radius:12px;background:#fff}
    .layout{display:grid;grid-template-columns:260px 1fr;gap:1rem;margin:1rem 0}
    .sidebar{border:1px solid #e2e8f0;border-radius:16px;background:#fff;box-shadow:var(--sh1)}
    .menu{display:grid;padding:.6rem}
    .menu__item{padding:.65rem .75rem;border-radius:12px;text-align:right;font-weight:800}
    .menu__item.is-active{background:linear-gradient(135deg,var(--g600),var(--g700));color:#fff}
    .content{min-width:0}
    .panel{display:none;border:1px solid #e2e8f0;border-radius:16px;background:#fff;box-shadow:var(--sh1);padding:1rem}
    .panel.is-visible{display:block}
    .panel__head{display:flex;justify-content:space-between;align-items:center;margin-bottom:.6rem}
    .grid2{display:grid;grid-template-columns:repeat(2,minmax(0,1fr));gap:.8rem}
    .form{display:grid;gap:.75rem}
    .field{display:grid;gap:.3rem}
    .field--full{grid-column:1/-1}
    .label{font-weight:800;color:var(--ink70)}
    .actions{display:flex;gap:.5rem;flex-wrap:wrap}
    .cards{display:grid;grid-template-columns:repeat(2,minmax(0,1fr));gap:.8rem}
    .land{border:1px solid #e5e7eb;border-radius:16px;background:#fff;display:grid;grid-template-columns:140px 1fr;gap:.8rem;padding:.8rem}
    .land__media{width:140px;height:110px;border-radius:12px;overflow:hidden;background:#0b1a13}
    .land__media img{width:100%;height:100%;object-fit:cover}
    .muted{color:var(--ink50)}
    /* خريطة */
    .map-wrap{border:1px solid #e5e7eb;border-radius:16px;overflow:hidden;background:#fff}
    .map-toolbar{display:flex;gap:.5rem;flex-wrap:wrap;padding:.6rem;border-bottom:1px solid #e5e7eb;background:#f9fafb}
    #map{width:100%;height:360px}
    .search-results{max-height:160px;overflow:auto;border-top:1px solid #e5e7eb}
    .search-results button{display:block;width:100%;text-align:right;padding:.5rem .75rem;border:0;background:#fff;border-bottom:1px solid #f1f5f9;cursor:pointer}
    .search-results button:hover{background:#f9fafb}
    /* رفع الصور Drag & Drop */
    .drop{border:2px dashed #cbd5e1;border-radius:16px;padding:1rem;display:grid;place-items:center;text-align:center;background:#fafafa}
    .drop.is-over{background:#f1f5f9;border-color:#94a3b8}
    .drop__hint{margin:.4rem 0;color:var(--ink50)}
    .thumbs{display:grid;grid-template-columns:repeat(5,minmax(0,1fr));gap:.5rem;margin-top:.6rem}
    .thumb{position:relative;border:1px solid #e5e7eb;border-radius:12px;overflow:hidden;background:#0000000a}
    .thumb img{display:block;width:100%;height:110px;object-fit:cover}
    .thumb button{position:absolute;inset:.3rem .3rem auto auto;border:0;border-radius:9px;background:#fff;padding:.2rem .5rem;cursor:pointer}
    .thumb button:hover{background:#ffe7e7}
    .toasts{position:fixed;left:16px;bottom:16px;display:grid;gap:.5rem;z-index:50}
    .toast{padding:.55rem .8rem;border-radius:12px;border:1px solid #e2e8f0;background:#fff;box-shadow:var(--sh1);font-weight:800}
    .toast--ok{border-color:#a7f3d0;background:#ecfdf5;color:#065f46}
    .toast--warn{border-color:#fde68a;background:#fffbeb;color:#92400e}
    @media (max-width:1100px){.thumbs{grid-template-columns:repeat(4,1fr)}}
    @media (max-width:900px){.layout{grid-template-columns:1fr}.grid2{grid-template-columns:1fr}.thumbs{grid-template-columns:repeat(3,1fr)}#map{height:300px}}
    :focus-visible{outline:none;box-shadow:var(--ring);border-radius:10px}
  </style>
</head>
<body>
<%- include('partials/navbar') %>

  <main class="container layout">
    <aside class="sidebar">
      <nav class="menu">
        <button class="menu__item is-active" data-view="lands">أراضيّي</button>
        <button class="menu__item" data-view="new">إضافة أرض</button>
        <button class="menu__item" data-view="subscribe">طلب ترقية الاشتراك</button>
        <button class="menu__item" data-view="settings" style="display: none;">الإعدادات</button>
      </nav>
    </aside>

    <section class="content">
      <!-- قائمة الأراضي -->
      <section class="panel is-visible" id="view-lands">
        <header class="panel__head"><h2>أراضيّي</h2></header>
        <div id="landsList" class="cards"></div>
        <p id="landsEmpty" class="muted" hidden>لا توجد أراضٍ.</p>
      </section>

      <!-- إضافة أرض + خريطة + رفع صور + حقول المالك -->
      <section class="panel" id="view-new">
        <header class="panel__head"><h2 id="formTitle">إضافة أرض</h2></header>

        <form id="landForm" class="form grid2" action="/owner/lands" method="post" novalidate>
          <input type="hidden" name="id"/>

          <!-- معلومات المالك -->
          <label class="field"><span class="label">اسم المالك</span><input maxlength="50" name="ownerFirst" class="input" placeholder="الاسم"/></label>
          <label class="field"><span class="label">اللقب</span><input maxlength="50" name="ownerLast" class="input" placeholder="اللقب"/></label>
          <label class="field"><span class="label">رقم واتساب</span><input name="ownerWhatsapp" class="input" placeholder="+9665... أو +9639..." /></label>

          <!-- معلومات الأرض -->
          <label class="field"><span class="label">عنوان الإعلان</span><input name="title" class="input" required placeholder="مثال: مزرعة زيتون"/></label>
          <label class="field"><span class="label">النوع</span>
            <select name="kind" class="input"><option value="sale">بيع</option><option value="rent">إيجار</option></select>
          </label>
          <label class="field"><span class="label">المنطقة</span><input name="area" class="input" required/></label>
          <label class="field"><span class="label">المحافظة</span><input name="city" class="input"/></label>
          <label class="field"><span class="label">المساحة (م²)</span><input name="size" type="number" class="input" min="0" required/></label>
          <label class="field"><span class="label">السعر</span><input name="price" type="number" class="input" min="0" required/></label>

          <!-- رفع الصور بالسحب والإفلات -->
          <div class="field field--full">
            <span class="label">صور الأرض</span>
            <div id="drop" class="drop" tabindex="0" aria-label="منطقة رفع الصور">
              <div>
                <strong>اسحب وأفلت الصور هنا</strong>
                <div class="drop__hint">أو اضغط للاختيار من جهازك (يدعم صور متعددة)</div>
                <button type="button" class="btn btn--ghost btn--small" id="pickBtn">اختيار صور</button>
                <input id="fileInput" type="file" accept="image/*" multiple hidden>
              </div>
            </div>
            <div id="thumbs" class="thumbs" aria-live="polite"></div>
            <small class="muted">يمكنك حذف الصور قبل الحفظ.</small>
          </div>
<!-- داخل <form id="landForm" ...> وقبل الوصف العام -->
<label class="field field--full">
  <span class="label">وصف المسبح (اختياري)</span>
  <textarea name="poolDesc" maxlength="500" class="input" rows="3" placeholder="تفاصيل المسبح: الحجم/التجهيز/السلامة…"></textarea>
</label>

<label class="field field--full">
  <span class="label">وصف المرافق (اختياري)</span>
  <textarea name="amenitiesDesc" maxlength="500" class="input" rows="3" placeholder="مرافق وخدمات …"></textarea>
</label>

<label class="field field--full">
  <span class="label">وصف البناء (اختياري)</span>
  <textarea name="buildingDesc" class="input" maxlength="500" rows="3" placeholder="تفاصيل البناء: المساحة، الغرف، التشطيب…"></textarea>
</label>

          <!-- وصف -->
          <label class="field field--full"><span class="label">وصف</span><textarea name="desc" maxlength="2000" class="input" rows="4"></textarea></label>
      <!-- داخل <form id="landForm" ...> -->
<label class="field field--full">
  <span class="label">رابط فيديو (اختياري)</span>
  <input name="videoUrl" class="input" placeholder="https://youtu.be/xxxx أو رابط mp4" />
</label>
          <!-- خريطة -->
          <div class="field field--full">
            <span class="label">موقع الأرض على الخريطة (OpenStreetMap)</span>
            <div class="map-wrap">
              <div class="map-toolbar">
                <input id="placeSearch" class="input" placeholder="اكتب العنوان ثم اضغط بحث"/>
                <button type="button" class="btn btn--small" id="searchBtn">بحث</button>
                <button type="button" class="btn btn--small" id="useGeoloc">استخدم موقعي الحالي</button>
                <button type="button" class="btn btn--small" id="clearLocation">مسح الموقع</button>
              </div>
              <div id="map"></div>
              <div id="results" class="search-results" hidden></div>
            </div>
            <input type="hidden" name="lat"/>
            <input type="hidden" name="lng"/>
            <input type="hidden" name="address"/>
            <small class="muted">اسحب العلامة لتعديل الموقع، سنحفظ الإحداثيات والعنوان تلقائيًا.</small>
          </div>

          <div class="actions field--full">
            <button class="btn btn--primary" type="submit">حفظ وارسال</button>
          </div>
        </form>
      </section>

      <!-- لوحة طلب ترقية الاشتراك -->
      <section class="panel" id="view-subscribe">
        <header class="panel__head"><h2>طلب ترقية الاشتراك</h2></header>

        <form id="subscribeForm" class="form" novalidate>
          <div class="field">
            <span class="label">اختر الخطة</span>
            <select name="plan" class="input" required>
              <option value="Premium">Premium</option>
              <option value="VIP">VIP</option>
            </select>
          </div>

          <div class="grid2">
            <label class="field">
              <span class="label">اسم المالك</span>
              <input class="input" maxlength="50" name="ownerFirst" placeholder="الاسم" required>
            </label>
            <label class="field">
              <span class="label">اللقب</span>
              <input class="input" maxlength="50" name="ownerLast" placeholder="اللقب" required>
            </label>
          </div>

          <label class="field">
            <span class="label">رقم واتساب للتواصل</span>
            <input class="input" name="ownerWhatsapp" placeholder="+9665... أو +9639..." required>
            <small class="muted">سنضمّن هذا الرقم في الرسالة لسهولة الردّ عليك.</small>
          </label>


          <label class="field">
            <span class="label">ملاحظات (اختياري)</span>
            <textarea class="input" maxlength="500" name="notes" rows="3" placeholder="مثال: أرغب بعدد X إعلانات، وقت مناسب للاتصال..."></textarea>
          </label>
        
          <div class="actions">
            <button class="btn btn--primary" type="submit">إرسال الطلب عبر واتساب</button>
            <button class="btn btn--outline" type="button" id="prefillBtn">تعبئة تلقائية من آخر إعلان</button>
          </div>

          <small class="muted">سيتم فتح واتساب بمتصفحك برسالة جاهزة إلى رقم الإدارة المناسب للخطة المختارة.</small>
        </form>
      </section>

      <!-- الإعدادات (مختصرة) -->
      <section class="panel" id="view-settings">
        <header class="panel__head"><h2>الإعدادات</h2></header>
        <p class="muted">إعدادات مختصرة — للتجربة.</p>
      </section>
    </section>
  </main>

  <!-- Toasts -->
  <div id="toasts" class="toasts"></div>

  <!-- Leaflet JS -->
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" crossorigin="anonymous"></script>

  <script>
    (()=> {
      'use strict';
      const qs=(s,r=document)=>r.querySelector(s);
      const qsa=(s,r=document)=>Array.from(r.querySelectorAll(s));
      const toastBox = qs('#toasts');
      const list  = document.getElementById('landsList');
      const empty = document.getElementById('landsEmpty');
      let _quotaState = { plan: 'Basic', left: 0, unlimited: false };
      let _quotaReady = false; // جديد

      function toast(msg, kind='ok', ms=2200){
        const t=document.createElement('div');
        t.className='toast ' + (kind==='ok'?'toast--ok':'toast--warn');
        t.textContent=msg; toastBox.appendChild(t);
        setTimeout(()=>t.remove(), ms);
      }
      function esc(s){ return (s??'').toString().replace(/[&<>"']/g, m=>({ '&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;' }[m])); }

      // تنقل بين المشاهد
      const views={ lands:qs('#view-lands'), new:qs('#view-new'), subscribe:qs('#view-subscribe'), settings:qs('#view-settings') };
      qsa('.menu__item').forEach(btn=>{
        btn.addEventListener('click',async  ()=>{
          qsa('.menu__item').forEach(b=>b.classList.remove('is-active'));
          btn.classList.add('is-active');
          const t=btn.dataset.view;
          Object.entries(views).forEach(([k,v])=> v.classList.toggle('is-visible', k===t));
          if (t==='new') {
      _quotaReady = false;                    // أعد الضبط عند كل دخول للتبويب
      await refreshQuota();                   // انتظر تحميل الحصّة
      setTimeout(()=> map?.invalidateSize(), 100);
    }
          if (t==='subscribe') prefillSubscribe();
        });
      });

      // بيانات
      const LS_KEY='owner_leaflet_uploads_v2_subscribe';
      const state = load() || seed();
      function load(){ try{const x=localStorage.getItem(LS_KEY); return x?JSON.parse(x):null;}catch{return null} }
      function save(){ localStorage.setItem(LS_KEY, JSON.stringify(state)); }
      function seed(){
        return {
          lands: [
            {id:'L-1',
             owner:{first:'أحمد', last:'ندّاف', whatsapp:'+963900000000'},
             title:'أرض زيتون — ريف دمشق', kind:'sale', area:'ريف دمشق', city:'قدسيا',
             size:22000, price:75000,
             photos:['https://images.unsplash.com/photo-1519681393784-d120267933ba?w=800'],
             desc:'طريق معبّد وبئر.', status:'approved',
             location:{lat:33.55, lng:36.28, address:'Qudsaya, Rif Dimashq'} }
          ]
        };
      }

      // عرض قائمة الأراضي
    
     // عناصر القائمة (قد تكون موجودة عندك — لا مشكلة لو كانت مكررة)
  
  // اجلب أراضي المستخدم من السيرفر (JSON)
  async function fetchMyLands(){
    const res = await fetch('/owner/lands', { headers:{ 'Accept':'application/json' } });
    if (!res.ok) throw new Error('fetch error');
    const json = await res.json();
    if (!json.ok) throw new Error(json.msg || 'fetch error');
    return json.data || [];
  }

  // تنسيق الأرقام
  function fmt(n){ try { return new Intl.NumberFormat('en').format(Number(n)||0); } catch { return n; } }

  // ⬅️ استبدل دالة renderLands القديمة بهذه النسخة
  async function renderLands(){
    list.innerHTML = '';
    let rows = [];
    try { rows = await fetchMyLands(); } catch { rows = []; }

    if (!rows.length){ empty.hidden = false; return; }
    empty.hidden = true;

    rows.forEach(l=>{
      const cover = (Array.isArray(l.photos) && l.photos[0]) || 'https://images.unsplash.com/photo-1613336026275-d6d0d43688ff?w=800';
      const kindText = l.kind === 'rent' ? 'إيجار' : 'بيع';

      const loc = l.location
        ? ` • 📍 ${esc(l.location.address || ((l.location.lat||'')+', '+(l.location.lng||'')))}`
        : '';

     const owner = l.ownerInfo ? ` • 👤 ${esc(l.ownerInfo.first||'')} ${esc(l.ownerInfo.last||'')}` : '';
const wa = l.ownerInfo?.whatsapp ? ` • واتساب: <a href="https://wa.me/${encodeURIComponent((l.ownerInfo.whatsapp||'').replace(/\D/g,''))}" target="_blank" rel="noopener">تواصل</a>` : '';
      // شارة الحالة + سبب الرفض إن وجد
      let statusBadge = '';
      if (l.status === 'approved')
        statusBadge = `<span class="pill" style="background:#ecfdf5;border:1px solid #a7f3d0;color:#065f46;padding:.1rem .45rem;border-radius:999px">مقبول</span>`;
      else if (l.status === 'rejected')
        statusBadge = `<span class="pill" style="background:#fef2f2;border:1px solid #fecaca;color:#991b1b;padding:.1rem .45rem;border-radius:999px">مرفوض</span>`;
      else
        statusBadge = `<span class="pill" style="background:#fffbeb;border:1px solid #fde68a;color:#92400e;padding:.1rem .45rem;border-radius:999px">بانتظار المراجعة</span>`;

      const reason = (l.status === 'rejected' && l.reviewNote)
        ? `<div class="muted" style="margin-top:.25rem">سبب الرفض: ${esc(l.reviewNote)}</div>`
        : '';

      const card = document.createElement('article');
card.className = 'land';
card.innerHTML = `
  <div class="land__media"><img src="${cover}" alt=""></div>
  <div>
    <h3 style="margin:.1rem 0">${esc(l.title||'—')}</h3>
    <div class="muted">
      ${kindText} • ${esc(l.area||'')} — ${esc(l.city||'')}
      ${loc}${owner}${wa}
      • ${l.kind==='rent' ? '$'+fmt(l.price)+'/شهر' : '$'+fmt(l.price)}
      • ${fmt(l.size)} م²
    </div>
    <div style="margin-top:.35rem">${statusBadge}</div>
    ${reason}
    <div style="margin-top:.5rem; display:flex; gap:.4rem; flex-wrap:wrap">
     <button class="btn btn--outline btn--small" data-act="edit" data-id="${l._id}">تعديل</button>
      <button class="btn btn--danger btn--small" data-act="delete" data-id="${l._id}">حذف</button>
    </div>
  </div>
`;
list.appendChild(card);

    });
  }

  // استدعها عند التحميل لأول مرة (كانت موجودة أصلًا في ملفك؛ أبقِ النداء)
 
// استدعها عند التحميل لأول مرة
renderLands();

// أزرار تعديل/حذف على البطاقات
list.addEventListener('click', async (e)=>{
  const btn = e.target.closest('button[data-act]');
  if (!btn) return;

  const id  = btn.dataset.id;
  const act = btn.dataset.act;

  if (act === 'edit') {
    try{
       const res  = await fetch(`/owner/lands/${id}`, { headers:{ 'Accept':'application/json' } });
      if (!res.ok) { toast('الإعلان غير موجود أو صلاحيتك غير كافية','warn'); return; }
      const json = await res.json();
      if (!json.ok) { toast(json.msg || 'تعذّر تحميل الإعلان','warn'); return; }

      const l = json.data;

      const form = document.getElementById('landForm');
      form.querySelector('[name="id"]').value            = l._id || '';
      form.querySelector('[name="ownerFirst"]').value    = l.ownerInfo?.first || '';
      form.querySelector('[name="ownerLast"]').value     = l.ownerInfo?.last || '';
      form.querySelector('[name="ownerWhatsapp"]').value = l.ownerInfo?.whatsapp || '';
      form.querySelector('[name="title"]').value         = l.title || '';
      form.querySelector('[name="kind"]').value          = (l.kind === 'rent' ? 'rent' : 'sale');
      form.querySelector('[name="area"]').value          = l.area || '';
      form.querySelector('[name="city"]').value          = l.city || '';
      form.querySelector('[name="size"]').value          = Number(l.size || 0);
      form.querySelector('[name="price"]').value         = Number(l.price || 0);
      form.querySelector('[name="desc"]').value          = l.description || '';
      form.querySelector('[name="videoUrl"]').value      = l.videoUrl || '';
      form.querySelector('[name="poolDesc"]').value      = l.poolDesc || '';
      form.querySelector('[name="amenitiesDesc"]').value = l.amenitiesDesc || '';
      form.querySelector('[name="buildingDesc"]').value  = l.buildingDesc || ''

      // الصور
      pendingPhotos = Array.isArray(l.photos) ? [...l.photos] : [];
      renderThumbs?.();

      // الموقع
      const lat = Number(l?.location?.lat);
      const lng = Number(l?.location?.lng);
      const address = l?.location?.address || '';
      if (Number.isFinite(lat) && Number.isFinite(lng)) {
        setLocation(lat, lng, address, true);
      } else {
        marker?.setOpacity?.(0);
        document.querySelector('input[name="lat"]').value = '';
        document.querySelector('input[name="lng"]').value = '';
        document.querySelector('input[name="address"]').value = '';
      }

      // افتح تبويب الإضافة/التعديل
      document.querySelectorAll('.menu__item').forEach(b=>b.classList.remove('is-active'));
      document.querySelector('.menu__item[data-view="new"]')?.classList.add('is-active');
      Object.entries(views).forEach(([k,v])=> v.classList.toggle('is-visible', k==='new'));

  const ft1 = document.getElementById('formTitle');
if (ft1) ft1.textContent = 'تعديل أرض';

      setTimeout(()=> map?.invalidateSize(), 100);

      toast('تم تحميل بيانات الإعلان — عدّل ثم احفظ','ok');
    }catch(err){
      console.error(err);
      toast('تعذّر تحميل الإعلان للتعديل','warn');
    }
    return;
  }

  if (act === 'delete') {
    if (!confirm('هل تريد حذف هذه الأرض؟')) return;
    try{
      const res  = await fetch(`/owner/lands/${id}`, { method:'DELETE' });
      const json = await res.json();
      if (!json.ok) throw new Error(json.msg || 'failed');
      toast('تم الحذف','ok');
      await renderLands();
      await refreshQuota?.();
    }catch(err){
      console.error(err);
      toast('تعذّر الحذف','warn');
    }
    return;
  }
});

      // ====== Leaflet + Nominatim ======
      // إصلاح روابط أيقونة الماركر (عند التحميل من CDN)
      L.Icon.Default.mergeOptions({
        iconRetinaUrl:'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',
        iconUrl:'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',
        shadowUrl:'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',
      });

      const map = L.map('map', { center:[33.5138,36.2765], zoom:8 });
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom:19, attribution:'&copy; OpenStreetMap'
      }).addTo(map);

      let marker = L.marker([33.5138,36.2765], {draggable:true}).addTo(map);
      marker.setOpacity(0); // مخفي إلى أن يختار المستخدم مكانًا

      const latInput = qs('input[name="lat"]');
      const lngInput = qs('input[name="lng"]');
      const addrInput = qs('input[name="address"]');
      const searchInput = qs('#placeSearch');
      const resultsBox = qs('#results');

      function setLocation(lat, lng, address='', pan=true){
        marker.setLatLng([lat,lng]).setOpacity(1);
        if (pan){ map.setView([lat,lng], 14); }
        latInput.value=lat; lngInput.value=lng; addrInput.value=address; searchInput.value=address||searchInput.value;
      }

      marker.on('dragend', ()=>{
        const {lat,lng} = marker.getLatLng();
        latInput.value=lat; lngInput.value=lng;
        reverseGeocode(lat,lng).then(addr=>{
          addrInput.value = addr || '';
          if (addr) searchInput.value = addr;
        });
      });

      qs('#searchBtn').addEventListener('click', ()=> doSearch());
      searchInput.addEventListener('keydown', (e)=>{ if(e.key==='Enter'){ e.preventDefault(); doSearch(); }});
      qs('#useGeoloc').addEventListener('click', useMyLocation);
      qs('#clearLocation').addEventListener('click', ()=>{
        marker.setOpacity(0); latInput.value=''; lngInput.value=''; addrInput.value=''; searchInput.value='';
        toast('تم مسح الموقع','warn');
      });

      async function doSearch(){
        const q = searchInput.value.trim();
        if (!q) return;
        resultsBox.innerHTML = '<button disabled>جارِ البحث…</button>';
        resultsBox.hidden = false;
        try{
          const url = `https://nominatim.openstreetmap.org/search?format=json&addressdetails=1&limit=5&q=${encodeURIComponent(q)}`;
          const res = await fetch(url, {headers:{'Accept-Language':'ar'}});
          const data = await res.json();
          if (!data.length){ resultsBox.innerHTML = '<button disabled>لا توجد نتائج</button>'; return; }
          resultsBox.innerHTML = data.map(p=>(`<button type="button" data-lat="${p.lat}" data-lng="${p.lon}" data-label="${esc(p.display_name)}">${esc(p.display_name)}</button>`)).join('');
        }catch(e){
          resultsBox.innerHTML = '<button disabled>تعذّر البحث</button>';
        }
      }

      resultsBox.addEventListener('click', (e)=>{
        const btn = e.target.closest('button[data-lat]'); if(!btn) return;
        const lat = parseFloat(btn.dataset.lat), lng = parseFloat(btn.dataset.lng);
        const label = btn.dataset.label || '';
        setLocation(lat,lng,label,true);
        resultsBox.hidden = true;
      });

      async function reverseGeocode(lat,lng){
        try{
          const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&zoom=16&addressdetails=1`;
          const res = await fetch(url, {headers:{'Accept-Language':'ar'}});
          const data = await res.json();
          return data.display_name || '';
        }catch{ return ''; }
      }

      function useMyLocation(){
        if (!navigator.geolocation){ toast('المتصفح لا يدعم تحديد الموقع','warn'); return; }
        navigator.geolocation.getCurrentPosition(async pos=>{
          const {latitude:lat, longitude:lng} = pos.coords;
          const addr = await reverseGeocode(lat,lng);
          setLocation(lat,lng,addr,true);
        }, ()=> toast('تعذّر الحصول على موقعك','warn'), {enableHighAccuracy:true, timeout:7000});
      }

      // ====== رفع الصور (Drag & Drop + File Input) ======
      const drop = qs('#drop');
      const pickBtn = qs('#pickBtn');
      const fileInput = qs('#fileInput');
      const thumbs = qs('#thumbs');
      // مخزن مؤقت لصور النموذج الحالي (Base64 DataURLs)
      let pendingPhotos = [];

      pickBtn.addEventListener('click', ()=> fileInput.click());
      fileInput.addEventListener('change', (e)=> handleFiles(e.target.files));

      // سحب/إفلات
      ['dragenter','dragover'].forEach(ev=>{
        drop.addEventListener(ev, e=>{ e.preventDefault(); e.stopPropagation(); drop.classList.add('is-over'); });
      });
      ['dragleave','drop'].forEach(ev=>{
        drop.addEventListener(ev, e=>{ e.preventDefault(); e.stopPropagation(); drop.classList.remove('is-over'); });
      });
      drop.addEventListener('drop', e=>{
        const files = e.dataTransfer.files;
        if (files && files.length) handleFiles(files);
      });

      // عند الضغط على منطقة الرفع: افتح اختيار الملفات
      drop.addEventListener('click', (e)=> {
        if (e.target.closest('button') || e.target.closest('input')) return;
        fileInput.click();
      });

      function handleFiles(files){
        const arr = Array.from(files).filter(f=>f.type.startsWith('image/'));
        if (!arr.length){ toast('الرجاء اختيار صور فقط','warn'); return; }
        arr.forEach(file=>{
          const reader = new FileReader();
          reader.onload = ()=> {
            pendingPhotos.push(reader.result); // DataURL
            renderThumbs();
          };
          reader.readAsDataURL(file);
        });
      }

      function renderThumbs(){
        thumbs.innerHTML = '';
        pendingPhotos.forEach((src, i)=>{
          const t = document.createElement('div');
          t.className='thumb';
          t.innerHTML = `<img src="${src}" alt=""><button type="button" data-i="${i}">حذف</button>`;
          thumbs.appendChild(t);
        });
      }
      thumbs.addEventListener('click', (e)=>{
        const btn = e.target.closest('button[data-i]'); if(!btn) return;
        const i = parseInt(btn.dataset.i,10);
        pendingPhotos.splice(i,1);
        renderThumbs();
      });

      // حفظ نموذج الأرض
const landForm = qs('#landForm');
const submitBtnPrimary = landForm.querySelector('button[type="submit"]');
if (submitBtnPrimary) {
  submitBtnPrimary.disabled = true;            // زر مغلق إلى أن نجلب الحصّة
  submitBtnPrimary.title = 'جارِ التحقق من حصتك…';
}


landForm.addEventListener('submit', async (e)=>{
  e.preventDefault();
if (!_quotaReady) {
    toast('انتظر لحظات… جاري التحقق من الحصّة', 'warn');
    return; // منع الإرسال حتى تُحمّل الحصّة
  }
  const fd = new FormData(landForm);
const idForEdit = (fd.get('id') || '').toString().trim();
const isEdit = !!idForEdit;
// ⛔️ لو إضافة جديدة والخطّة وصلت الحد — امنع الإرسال
if (!isEdit) {
  const left = _quotaState?.left;
  const unlimited = _quotaState?.unlimited === true || left === Infinity;
  if (!unlimited && Number(left) <= 0) {
    toast('بلغت حد النشر المسموح به في خطتك. قم بالترقية للنشر أكثر.', 'warn');
    return; // ← ← ← إيقاف الإرسال نهائيًا
  }
}
  // فحص الواتساب
  const wa = (fd.get('ownerWhatsapp')||'').toString().trim().replace(/\s+/g,'');
  if (wa && !/^\+?\d{6,15}$/.test(wa)){ toast('رقم واتساب غير صحيح','warn'); return; }

  const lat = parseFloat(fd.get('lat'));
  const lng = parseFloat(fd.get('lng'));

  const payload = {
    ownerFirst:    (fd.get('ownerFirst')    || '').toString().trim(),
    ownerLast:     (fd.get('ownerLast')     || '').toString().trim(),
    ownerWhatsapp: (fd.get('ownerWhatsapp') || '').toString().trim(),
    title: (fd.get('title')||'').toString().trim(),
    kind: fd.get('kind') || 'sale',
    area: (fd.get('area')||'').toString().trim(),
    city: (fd.get('city')||'').toString().trim(),
    size: parseInt(fd.get('size')||0,10),
    price: parseInt(fd.get('price')||0,10),
    photos: [...pendingPhotos],
      poolDesc:      (fd.get('poolDesc')      || '').toString().trim(),
  amenitiesDesc: (fd.get('amenitiesDesc') || '').toString().trim(),
  buildingDesc:  (fd.get('buildingDesc')  || '').toString().trim(),
    description: (fd.get('desc')||'').toString().trim(),
    videoUrl: (fd.get('videoUrl') || '').toString().trim(),
    location: (Number.isFinite(lat)&&Number.isFinite(lng))
      ? {lat,lng,address:(fd.get('address')||'').toString()}
      : null
  };

  const url = isEdit ? `/owner/lands/${idForEdit}` : '/owner/lands';
  const method = isEdit ? 'PATCH' : 'POST';

  submitBtnPrimary.disabled = true;
  submitBtnPrimary.textContent = 'جارِ الإرسال…';

  try{
    const res = await fetch(url, {
      method,
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify(payload),
    });
    const data = await res.json();

    if (!data.ok) {
      toast(data.msg || 'تعذّر الإرسال', 'warn');
      return;
    }

    toast(isEdit ? 'تم التعديل وإرسال الإعلان للمراجعة' : 'تم الإرسال للمراجعة','ok');

    // إعادة الوضع لإضافة جديدة
 const ft2 = document.getElementById('formTitle');
if (ft2) ft2.textContent = 'إضافة أرض';


    landForm.querySelector('[name="id"]').value = '';
    landForm.reset();
    pendingPhotos = []; renderThumbs?.();
    marker?.setOpacity?.(0);

    // حدّث القائمة والحصّة
    await renderLands();
    await refreshQuota?.();

  }catch(err){
    console.error(err);
    toast('خطأ بالشبكة','warn');
  }finally{
    submitBtnPrimary.disabled = false;
    submitBtnPrimary.textContent = 'حفظ وارسال';
  }
});

      // ====== طلب ترقية الاشتراك عبر واتساب ======
      // عدّل الأرقام التالية حسب نظامك
      const ADMIN_WA_PREMIUM = '+21620353915'; // رقم إدارة Premium
      const ADMIN_WA_VIP     = '+21620353915'; // رقم إدارة VIP

      function isValidWa(num){
        const n = (num||'').toString().trim().replace(/\s+/g,'');
        return /^\+?\d{6,15}$/.test(n);
      }

      function prefillSubscribe(){
        const f = document.getElementById('subscribeForm');
        if (!f) return;
        try{
          const last = (state.lands||[])[0];
          if (last?.owner){
            if (!f.ownerFirst.value)   f.ownerFirst.value   = last.owner.first || '';
            if (!f.ownerLast.value)    f.ownerLast.value    = last.owner.last  || '';
            if (!f.ownerWhatsapp.value)f.ownerWhatsapp.value= last.owner.whatsapp || '';
          }
        }catch{}
        if (!f.plan.value) f.plan.value = 'Premium';
      }

      function makeWaLink({to, text}){
        const num = to.replace(/\D/g,'');
        return `https://wa.me/${num}?text=${encodeURIComponent(text)}`;
      }

      const subscribeForm = document.getElementById('subscribeForm');
      const prefillBtn    = document.getElementById('prefillBtn');

      if (prefillBtn) prefillBtn.addEventListener('click', prefillSubscribe);

      if (subscribeForm){
        subscribeForm.addEventListener('submit',async (e)=>{
          e.preventDefault();
          const fd = new FormData(subscribeForm);
          const plan   = fd.get('plan') || 'Premium';
          const first  = (fd.get('ownerFirst')||'').toString().trim();
          const last   = (fd.get('ownerLast')||'').toString().trim();
          const wa     = (fd.get('ownerWhatsapp')||'').toString().trim();
          const notes  = (fd.get('notes')||'').toString().trim();

          if (!first || !last){ toast('املأ الاسم واللقب', 'warn'); return; }
          if (!isValidWa(wa)){ toast('رقم واتساب غير صحيح', 'warn'); return; }

          const adminTo = (plan === 'VIP') ? ADMIN_WA_VIP : ADMIN_WA_PREMIUM;

          const msg = [
            'مرحباً إدارة Farmers 👋',
            `أرغب بالاشتراك: ${plan}`,
            `الاسم: ${first} ${last}`,
            `واتسابي: ${wa}`,
            notes? `ملاحظات: ${notes}` : null,
            'شكراً لكم.'
          ].filter(Boolean).join('\n');
          // بعد بناء msg و adminTo:
try {
  const payload = {
    plan,
    ownerFirst: first,
    ownerLast:  last,
    ownerWhatsapp: wa,
    notes
  };
  await fetch('/owner/subscriptions', {
    method: 'POST',
    headers: { 'Content-Type':'application/json' },
    body: JSON.stringify(payload)
  });
  // حتى لو فشل الحفظ لن نمنع فتح واتساب، بس بنطلع Toast
} catch (e) {
  console.warn('Subscription save error:', e);
  toast('لم نستطع حفظ طلب الاشتراك في النظام، لكن سيتم فتح واتساب', 'warn');
}

          const url = makeWaLink({to: adminTo, text: msg});
          window.open(url, '_blank', 'noopener');
          toast('فتح واتساب لإرسال الطلب', 'ok');
        });
      }

      // لغة/اتجاه
      qs('#langToggle').addEventListener('click', ()=>{
        const rtl = document.documentElement.getAttribute('dir')==='rtl';
        document.documentElement.setAttribute('dir', rtl?'ltr':'rtl');
        qs('#langToggle').textContent = rtl ? 'العربية' : 'English';
        setTimeout(()=> map.invalidateSize(), 100);
      });

 // === الحصة وحدود النشر ===
async function refreshQuota(){
  const submitBtn = document.querySelector('#landForm button[type="submit"]');

  // مكان عرض الرسالة: ننشئ صندوق صغير أعلى الفورم إذا مش موجود
  let info = document.getElementById('quotaMsg');
  if (!info) {
    info = document.createElement('div');
    info.id = 'quotaMsg';
    info.style.margin = '0 0 .75rem 0';
    info.style.fontSize = '.95rem';
    const form = document.getElementById('landForm');
    if (form) form.parentNode.insertBefore(info, form); // ضع الرسالة فوق الفورم
  }

  info.textContent = 'جارِ التحقق من حصتك…';

  try{
  const r = await fetch('/owner/lands/quota', { headers:{'Accept':'application/json'} });
  const j = await r.json();
  if (!j.ok) throw new Error(j.msg || 'quota error');

  // ✅ خزّن الحالة لتستخدمها عند الـ submit
  const { plan, limit, used, left } = j.data;
  // ملاحظة: بعض الـ APIs ترجّع null عوض Infinity. نعتبر null = غير محدود
  const unlimited = (left === null || limit === null);
  const leftNum   = unlimited ? Infinity : Number(left);
  const limitNum  = unlimited ? Infinity : Number(limit);

  _quotaState = { plan, left: leftNum, unlimited };

  const limitTxt = unlimited ? 'غير محدود' : limitNum;
  const leftTxt  = unlimited ? 'غير محدود' : leftNum;

  info.innerHTML = `
    <span style="padding:.25rem .5rem;border:1px solid #e5e7eb;border-radius:999px;background:#f9fafb">
      خطتك: <strong>${plan}</strong> • المسموح: <strong>${limitTxt}</strong> • المُستخدم: <strong>${used}</strong> • المتبقي: <strong>${leftTxt}</strong>
    </span>
  `;
_quotaReady = true;
  if (submitBtn) {
    if (!unlimited && leftNum <= 0) {
      submitBtn.disabled = true;
      submitBtn.title = 'بلغتَ حد النشر المسموح به في خطتك';
    } else {
      submitBtn.disabled = false;
      submitBtn.title = '';
    }
  }

}catch(e){
  console.warn(e);
  info.innerHTML = `<span class="muted">تعذّر جلب معلومات الحصّة.</span>`;
    // في catch:
_quotaReady = false;
if (submitBtn) {
  submitBtn.disabled = true;
  submitBtn.title = 'تعذّر جلب الحصّة';
}
}

}

// نادِها عند تحميل الصفحة
refreshQuota();

    })();
  </script>
</body>
</html>
